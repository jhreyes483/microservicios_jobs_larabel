version: '3'

services:
  mysql1:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: mysql1
    ports:
      - "${DB1_PORT}:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${DB1_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB1_DATABASE}
      MYSQL_USER: ${DB1_USER}
      MYSQL_PASSWORD: ${DB1_PASSWORD}
    networks:
      - my_network

  mysql2:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: mysql2
    ports:
      - "${DB2_PORT}:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${DB2_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB2_DATABASE}
      MYSQL_USER: ${DB2_USER}
      MYSQL_PASSWORD: ${DB2_PASSWORD}
    networks:
      - my_network

  mysql3:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: mysql3
    ports:
      - "${DB3_PORT}:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${DB3_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB3_DATABASE}
      MYSQL_USER: ${DB3_USER}
      MYSQL_PASSWORD: ${DB3_PASSWORD}
    networks:
      - my_network

  redis:
    image: redis
    container_name: redis
    ports:
      - "${REDIS_PORT}:6379"
    command: redis-server --databases 1
    networks:
      - my_network

  mongo:
    image: mongo
    container_name: mongo
    ports:
      - "${MONGO_PORT}:27017"
    environment:
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE}
    networks:
      - my_network

networks:
  my_network:
    external:
      name: my_network
